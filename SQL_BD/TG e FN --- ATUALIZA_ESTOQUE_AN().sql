
-- DROP FUNCTION FN_ATUALIZA_ESTOQUE_AN() CASCADE

CREATE OR REPLACE FUNCTION FN_ATUALIZA_ESTOQUE_AN() RETURNS TRIGGER AS 
	$ESTOQUE$
  BEGIN
IF (TG_OP = 'DELETE') THEN

	INSERT INTO ESTOQUE_SALDO (IDESTOQUE, IDPRODUTO, QTDSALDO, VALORESTOQUE, FN_LOG) VALUES
	(
	NEW.IDESTOQUE,
	NEW.IDPRODUTO,
	(NEW.QUANTIDADE = ((SELECT
							ES.QTDSALDO
						FROM
							ESTOQUE_SALDO AS ES
						WHERE
							ES.IDESTOQUE = NEW.IDESTOQUE AND
							ES.IDPRODUTO = NEW.IDPRODUTO AND
							ES.DTALTERACAO = (SELECT
												MAX(ESD.DTMOVIMENTO)
											FROM
													ESTOQUE_SALDO AS ESD
												WHERE
													ESD.IDESTOQUE = ES.IDESTOQUE AND
													ESD.IDPRODUTO = ES.IDPRODUTO
											)
						)
	- NEW.QUANTIDADE)),
	(NEW.VALORTOT = ((	SELECT
							ES.VALORESTOQUE
						FROM
							ESTOQUE_SALDO AS ES
						WHERE
							ES.IDESTOQUE = NEW.IDESTOQUE AND
							ES.IDPRODUTO = NEW.IDPRODUTO AND
							ES.DTALTERACAO = (SELECT
												MAX(ESD.DTMOVIMENTO)
											FROM
												ESTOQUE_SALDO AS ESD
											WHERE
												ESD.IDESTOQUE = ES.IDESTOQUE AND
												ESD.IDPRODUTO = ES.IDPRODUTO
											)
					)
	- NEW.VALORTOT)),
	('TG_name ' || TG_name || '  -  TG_relid ' || TG_relid || '  -#-  ')
	);

	RETURN NEW;

ELSIF (TG_OP = 'UPDATE') THEN

	INSERT INTO ESTOQUE_SALDO (IDESTOQUE, IDPRODUTO, QTDSALDO, VALORESTOQUE, FN_LOG) VALUES
	(
	NEW.IDESTOQUE,
	NEW.IDPRODUTO,
	(NEW.QUANTIDADE = ((SELECT
							ES.QTDSALDO
						FROM
							ESTOQUE_SALDO AS ES
						WHERE
							ES.IDESTOQUE = NEW.IDESTOQUE AND
							ES.IDPRODUTO = NEW.IDPRODUTO AND
							ES.DTALTERACAO = (SELECT
												MAX(ESD.DTMOVIMENTO)
											FROM
													ESTOQUE_SALDO AS ESD
												WHERE
													ESD.IDESTOQUE = ES.IDESTOQUE AND
													ESD.IDPRODUTO = ES.IDPRODUTO
											)
					) +
	CASE NEW.TIPOOPERACAO WHEN 'E' THEN NEW.QUANTIDADE ELSE (NEW.QUANTIDADE * (-1)) END)),
	(NEW.VALORTOT = ((	SELECT
							ES.VALORESTOQUE
						FROM
							ESTOQUE_SALDO AS ES
						WHERE
							ES.IDESTOQUE = NEW.IDESTOQUE AND
							ES.IDPRODUTO = NEW.IDPRODUTO AND
							ES.DTALTERACAO = (SELECT
												MAX(ESD.DTMOVIMENTO)
											FROM
												ESTOQUE_SALDO AS ESD
											WHERE
												ESD.IDESTOQUE = ES.IDESTOQUE AND
												ESD.IDPRODUTO = ES.IDPRODUTO
											)
					) +
	CASE NEW.TIPOOPERACAO WHEN 'E' THEN NEW.VALORTOT ELSE (NEW.VALORTOT * (-1)) END)),
	('TG_name ' || TG_name || '  -  TG_relid ' || TG_relid || '  -#-  ')
	);

	RETURN NEW;

ELSIF (TG_OP = 'INSERT') THEN

	INSERT INTO ESTOQUE_SALDO (IDESTOQUE, IDPRODUTO, QTDSALDO, VALORESTOQUE, FN_LOG) VALUES
	(
	NEW.IDESTOQUE,
	NEW.IDPRODUTO,
	NEW.QUANTIDADE = (( SELECT
							ES.QTDSALDO
						FROM
							ESTOQUE_SALDO AS ES
						WHERE
							ES.IDESTOQUE = NEW.IDESTOQUE AND
							ES.IDPRODUTO = NEW.IDPRODUTO AND
							ES.DTALTERACAO = (SELECT
												MAX(ESD.DTMOVIMENTO)
											FROM
													ESTOQUE_SALDO AS ESD
												WHERE
													ESD.IDESTOQUE = ES.IDESTOQUE AND
													ESD.IDPRODUTO = ES.IDPRODUTO
											)
				)
	+ NEW.QUANTIDADE),
	NEW.VALORTOT = ((   SELECT
							ES.VALORESTOQUE
						FROM
							ESTOQUE_SALDO AS ES
						WHERE
							ES.IDESTOQUE = NEW.IDESTOQUE AND
							ES.IDPRODUTO = NEW.IDPRODUTO AND
							ES.DTALTERACAO = (SELECT
												MAX(ESD.DTMOVIMENTO)
											FROM
												ESTOQUE_SALDO AS ESD
											WHERE
												ESD.IDESTOQUE = ES.IDESTOQUE AND
												ESD.IDPRODUTO = ES.IDPRODUTO
											)
						)
	+ NEW.VALORTOT),
	('TG_name ' || TG_name || '  -  TG_relid ' || TG_relid || '  -#-  ')
	);

	RETURN NEW;

END IF;
RETURN NULL;
END;
$ESTOQUE$ LANGUAGE PLPGSQL;
COMMIT;

-------------------------------------------------------------------------------------------------------------------

CREATE TRIGGER TG_ATUALIZA_ESTOQUE_AN
AFTER INSERT OR UPDATE OR DELETE ON ESTOQUE
	FOR EACH ROW EXECUTE PROCEDURE FN_ATUALIZA_ESTOQUE_AN();
COMMIT;

-------------------------------------------------------------------------------------------------------------------
